{"version":3,"sources":["components/Music/Music.js","components/NavBar/NavBar.js","components/Pictures/Pictures.js","App.js","index.js"],"names":["Music","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","play","url","audio","Audio","togglePlay","bind","assertThisInitialized","setState","console","log","pause","react_default","a","createElement","className","onClick","React","Component","NavBar","id","score","bestScore","Pictures","clickCount","src","image","alt","name","App","pictures","endGame","alert","concat","forEach","count","find","i","sort","Math","random","_this2","components_NavBar_NavBar","components_Music_Music","map","components_Pictures_Pictures","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f41625c2.chunk.js","sourcesContent":["import React from \"react\";\nclass Music extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { play: true };\n      this.url = \"http://87.117.201.160:8200/;\";\n      this.audio = new Audio(this.url);\n      this.togglePlay = this.togglePlay.bind(this);\n    }\n  \n    togglePlay() {\n      this.setState({ play: !this.state.play });\n      console.log(this.audio);\n      this.state.play ? this.audio.play() : this.audio.pause();\n    }\n  \n    render() {\n      return (\n        <div>\n          <button className=\"btn-outline-danger ml-1 mt-2\" onClick={this.togglePlay}>{this.state.play ? 'Listen to UK GARAGE' : 'Pause'}</button>\n        </div>\n      );\n    }\n  }\n  \n  export default Music;","import React from \"react\";\n\nimport \"./NavBar.css\";\n//this is my NavBar component which displays the title of the game, the current score, and the best score\nconst NavBar = props => (\n  <nav className=\"bg-dark text-white\">\n    <ul>\n      <li className=\"title\">ðŸ”ŠGarage Kings Click GameðŸ”Š</li>\n      <li id=\"currentScore\" className=\"scores\">\n        Current Score: {props.score}\n      </li>\n      <li id=\"bestScore\" className=\"scores\">\n        Best Score: {props.bestScore}\n      </li>\n    </ul>\n    <h4 className=\"text-center pb-2 rules\">Click on every UK Garage producer BUT don't click the same image twice!</h4>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Pictures.css\";\n//this is my pictures component that sets up each picture to listen for a user click\n//Once clicked, the clickCount function is run on the picture matching that id\nconst Pictures = props => (\n  <div className=\"pictures uk-animation-scale-up\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"image-container\">\n      <img src={props.image} alt={props.name} />\n   \n    \n    </div>\n  </div>\n);\n// exports this Pictures component to be imported in App.js\nexport default Pictures;","//importing needed files\nimport React from \"react\";\nimport Music from \"./components/Music/Music\"\nimport NavBar from \"./components/NavBar\";\nimport Pictures from \"./components/Pictures\";\nimport pictures from \"./pictures.json\";\n\n\nclass App extends React.Component {\n  state = {\n    score: 0,\n    bestScore: 0,\n    pictures\n  };\n\n  \n\n  //endGame is a function that:\n  //                1.Will alert the user that the game is over and display their score for that round\n  //                2.updates the state of bestScore if your current score is higher than your previous bestScore\n\n  endGame = () => {\n    alert(`GAME OVER\\n Your score is: ${this.state.score}`);\n    this.setState({ score: 0 });\n    this.state.pictures.forEach(pictures => {\n      pictures.count = 0;\n    });\n    if (this.state.score > this.state.bestScore) {\n      this.setState({ bestScore: this.state.score });\n    }\n    return true;\n  };\n// clickCount is a function that : \n//                                  1. Goes thru the pictures.json array and finds the picture with the matching pictures.id and IF the\n// picture with that id has a count value of 0, it changes the count value to 1. \n//                                  2. Then it will increase the users current score by 1.\n//                                  3. Then using .sort and Math.random it will randomly shuffle the objects in my pictures array.\n  clickCount = id => {\n    this.state.pictures.find((a, i) => {\n      if (a.id === id) {\n        if (pictures[i].count === 0) {\n          pictures[i].count += 1;\n          this.setState({ score: this.state.score + 1 }, function() {\n            console.log(this.state.score);\n            if (this.state.score === 9){\n                alert(\"CONGRATS - YOU WON!!!\")\n                this.setState({ score: 0 });\n            }\n          });\n          this.state.pictures.sort(() => Math.random() - .42);\n          return true;\n        } else {\n          this.endGame();\n        }\n      }\n    });\n  };\n// here we render the NavBar component & the Pictures component. \n// the .map method is used to create a new pictures array and sets the values to each pictures object\n\n  render() {\n    return (\n        <div>\n        <NavBar score={this.state.score} bestScore={this.state.bestScore} />\n        <Music></Music>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            {this.state.pictures.map(pictures => (\n                <Pictures\n                clickCount={this.clickCount}\n                id={pictures.id}\n                key={pictures.id}\n                image={pictures.image}\n                />\n                ))}\n          </div>\n        </div>\n       \n      </div>\n    );\n}\n}\n//exports everything above to index.js to be rendered to the DOM\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}